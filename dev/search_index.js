var documenterSearchIndex = {"docs":
[{"location":"ECCO/#ECCO-how-to","page":"ECCO","title":"ECCO how-to","text":"","category":"section"},{"location":"ECCO/","page":"ECCO","title":"ECCO","text":"The workflow presented here is:","category":"page"},{"location":"ECCO/","page":"ECCO","title":"ECCO","text":"set up recommended for running analyses of ECCO estimates.\nrun one computation loop on the ECCO monthly files.","category":"page"},{"location":"ECCO/","page":"ECCO","title":"ECCO","text":"ECCO.standard_analysis_setup","category":"page"},{"location":"ECCO/#OceanStateEstimation.ECCO.standard_analysis_setup","page":"ECCO","title":"OceanStateEstimation.ECCO.standard_analysis_setup","text":"ECCO.standard_analysis_setup(pth0::String)\n\nCreate temporary run folder pth where data folder pth0 will be linked. \n\nData folder pth0 should be the path to ECCO data.\n\nFor example:\n\nusing OceanStateEstimation, Pkg\npth_in=ECCOclim_path\npth=ECCO.standard_analysis_setup(pth_in)\n\nThe Project.toml file found in pth provides an environment ready for ECCO analyses. \n\nThis environment can be activated and instantiated:\n\nPkg.activate(pth)\nPkg.instantiate()\n\n\n\n\n\n","category":"function"},{"location":"ECCO/","page":"ECCO","title":"ECCO","text":"Here is an example of parameters P to compute zonal mean temperatures at level 5.","category":"page"},{"location":"ECCO/","page":"ECCO","title":"ECCO","text":"ECCO_helpers.parameters","category":"page"},{"location":"ECCO/#OceanStateEstimation.ECCO_helpers.parameters","page":"ECCO","title":"OceanStateEstimation.ECCO_helpers.parameters","text":"parameters(P0,params)\n\nPrepare parameter NamedTuple for use in ECCO_diagnostics.driver.\n\nP1=parameters(P0,p) \n\nis faster than e.g. parameters(pth,\"r2\",p) as grid, etc get copied from P0 to P1.\n\n\n\n\n\nparameters(pth0::String,sol0::String,params)\n\nPrepare parameter NamedTuple for use in ECCO_diagnostics.driver.\n\nFor example, to compute zonal mean temperatures at level 5:\n\np=(calc = \"zonmean\", nam = \"THETA\", lev = 5)\npth=ECCO.standard_analysis_setup(ECCOclim_path)\nP0=parameters(pth,\"r2\",p)\n\nor, from a predefined list:\n\nlist0=ECCO_helpers.standard_list_toml(\"\")\npth=ECCO.standard_analysis_setup(ECCOclim_path)\nP1=parameters(pth,\"r2\",list0[1])\n\n\n\n\n\n","category":"function"},{"location":"examples/#Physical-Oceanography","page":"Examples","title":"Physical Oceanography","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"ECCO_standard_plots.jl (➭ code link) depicts a few climate-relevant variables and indices as an example. These quantities were derived (see this notebook and this script) from estimates of the ocean state that provide gridded fields for physical variables like temperature, salinity, and currents. The initial fields can be retrieved from the ECCO dataverse, and intermediate results from zenodo.org.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you want to run the notebook on your local computer or in the cloud, please refer to the directions provided at the notebook final section. Or more generally, to : ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"JuliaClimate Notebooks How-To \necco-group.org story map\nvideo demonstration","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"For more notebooks on these gridded estimates, and how to analyze them, see :","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"MeshArrays.jl : gridded Earth variables, domain decomposition, C-grid support; Ocean Circulation, Geography tutorials.\nIndividualDisplacements.jl : simulation and analysis of materials moving through oceanic and atmospheric flows.\nMITgcmTools.jl : framework to interact with MITgcm (setup, run, output, plot, etc) and ECCO.","category":"page"},{"location":"examples/#Marine-Ecosystems","page":"Examples","title":"Marine Ecosystems","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The CBIOMES-global climatology (alpha version) is a global ocean state estimate that covers the period from 1992 to 2011 (ECCO). It is based on Forget et al 2015 for ocean physics MIT general circulation model and on Dutkiewicz et al 2015 for marine biogeochemistry and ecosystems Darwin Project model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"CBIOMES_climatology_plot (➭ code link) : visualize the climatology maps interactively using Pluto.jl\nCBIOMES_climatology_create (➭ code link) : recreate the climatology file. The original is archived here in zenodo.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"For more notebooks involving CBIOMES and related efforts :","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Marine Ecosystem Notebooks : Darwin Model, Ocean Color data, Gradients field program, and more.\nPlanktonIndividuals.jl : simulate the life cycle of ocean phytoplankton cells and their environment.\nOptimalTransport_demo.jl : application of optimal transport to compare model and data.\nJuliaCon2021 workshop : Modeling Marine Ecosystems At Multiple Scales Using Julia.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"To retrieve this climatology, in the julia REPL for example :","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using OceanStateEstimation, NCTiles\nOceanStateEstimation.CBIOMESclim_download()\nfil_out=joinpath(CBIOMESclim_path,\"CBIOMES-global-alpha-climatology.nc\")\nnc=NCTiles.NCDataset(fil_out,\"r\")","category":"page"},{"location":"examples/#References","page":"Examples","title":"References","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"OCCA : Forget 2010\nECCO v4 : Forget et al 2015\nCBIOMES-global : Forget 2018","category":"page"},{"location":"#OceanStateEstimation.jl","page":"Home","title":"OceanStateEstimation.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is currently focused on serving and deriving climatologies from ocean state estimates. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"See Physical Oceanography and Marine Ecosystems for examples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is in early development stage; breaking changes remain likely.","category":"page"},{"location":"API/#Data-Access","page":"Functionalities","title":"Data Access","text":"","category":"section"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"The gridded fields used in the ECCO examples can be retrieved from ecco-group.org and, for the ECCOv4r2 estimate, from Harvard Dataverse or zenodo.org. Two monthly climatologies (ECCOv4r2 and OCCA) are also readily available using the Julia artifact system as explained below. These can be relatively large files, compared to the package codes, so they are handled lazily (only downloaded when needed). ","category":"page"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"Artifact path File Type Download Method\nECCOclim_path NetCDF lazy, by variable, dataverse\nOCCAclim_path NetCDF lazy, by variable, dataverse\nMITPROFclim_path binary lazy, whole, zenodo\nECCOdiags_path JLD2 lazy, whole, zenodo","category":"page"},{"location":"API/#Basic-Usage","page":"Functionalities","title":"Basic Usage","text":"","category":"section"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"For ECCO :","category":"page"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"using OceanStateEstimation, MeshArrays\nγ=GridSpec(\"LatLonCap\",MeshArrays.GRID_LLC90)\ntmp=OceanStateEstimation.get_ecco_files(γ,\"ETAN\")","category":"page"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"For OCCA :","category":"page"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"using OceanStateEstimation\nget_occa_variable_if_needed(\"SIarea\")\nreaddir(OCCAclim_path)","category":"page"},{"location":"API/#Functions-Reference","page":"Functionalities","title":"Functions Reference","text":"","category":"section"},{"location":"API/","page":"Functionalities","title":"Functionalities","text":"Modules = [OceanStateEstimation,ECCO,ECCO_helpers,ECCO_diagnostics,ECCO_io]","category":"page"},{"location":"API/#OceanStateEstimation.ECCO.standard_analysis_setup-Tuple{String}","page":"Functionalities","title":"OceanStateEstimation.ECCO.standard_analysis_setup","text":"ECCO.standard_analysis_setup(pth0::String)\n\nCreate temporary run folder pth where data folder pth0 will be linked. \n\nData folder pth0 should be the path to ECCO data.\n\nFor example:\n\nusing OceanStateEstimation, Pkg\npth_in=ECCOclim_path\npth=ECCO.standard_analysis_setup(pth_in)\n\nThe Project.toml file found in pth provides an environment ready for ECCO analyses. \n\nThis environment can be activated and instantiated:\n\nPkg.activate(pth)\nPkg.instantiate()\n\n\n\n\n\n","category":"method"},{"location":"API/#OceanStateEstimation.ECCO_helpers.parameters-Tuple{Any, Any}","page":"Functionalities","title":"OceanStateEstimation.ECCO_helpers.parameters","text":"parameters(P0,params)\n\nPrepare parameter NamedTuple for use in ECCO_diagnostics.driver.\n\nP1=parameters(P0,p) \n\nis faster than e.g. parameters(pth,\"r2\",p) as grid, etc get copied from P0 to P1.\n\n\n\n\n\n","category":"method"},{"location":"API/#OceanStateEstimation.ECCO_helpers.parameters-Tuple{String, String, Any}","page":"Functionalities","title":"OceanStateEstimation.ECCO_helpers.parameters","text":"parameters(pth0::String,sol0::String,params)\n\nPrepare parameter NamedTuple for use in ECCO_diagnostics.driver.\n\nFor example, to compute zonal mean temperatures at level 5:\n\np=(calc = \"zonmean\", nam = \"THETA\", lev = 5)\npth=ECCO.standard_analysis_setup(ECCOclim_path)\nP0=parameters(pth,\"r2\",p)\n\nor, from a predefined list:\n\nlist0=ECCO_helpers.standard_list_toml(\"\")\npth=ECCO.standard_analysis_setup(ECCOclim_path)\nP1=parameters(pth,\"r2\",list0[1])\n\n\n\n\n\n","category":"method"},{"location":"API/#OceanStateEstimation.ECCO_diagnostics.driver-Tuple{Any}","page":"Functionalities","title":"OceanStateEstimation.ECCO_diagnostics.driver","text":"driver(P)\n\nCall main computation loop as specified by parameters P.\n\nThe main computation loop choice depends on the P parameter values. Methods include:\n\nmain_clim\nmain_glo\nmain_zonmean\nmain_overturn\nmain_MHT\nmain_trsp\n\n\n\n\n\n","category":"method"},{"location":"API/#OceanStateEstimation.ECCO_io.read_monthly-Tuple{Any, Any, Any}","page":"Functionalities","title":"OceanStateEstimation.ECCO_io.read_monthly","text":"read_monthly(P,nam,t)\n\nRead record t for variable nam from file locations specified via parameters P.\n\nThe method used to read nam is selected based on nam's value. Methods include:\n\nread_monthly_default\nread_monthly_SSH\nread_monthly_MHT\nread_monthly_BSF\n\n\n\n\n\n","category":"method"}]
}
